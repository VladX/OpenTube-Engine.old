include (CheckFunctionExists.cmake)
include (CheckIncludeFile)
include (FindPkgConfig)
include (CheckCCompilerFlag)
include (CheckSymbolExists)
include (FindPythonInterp)
include (CheckCSourceCompiles)
include (TestBigEndian)

macro (required_lib variable fileinclude libname)
 check_include_file (${fileinclude} ${variable})
 if (NOT ${variable})
  message (FATAL_ERROR "Required library ${libname} not found.")
 endif (NOT ${variable})
endmacro (required_lib)

test_big_endian (IS_HOST_BIG_ENDIAN)
check_type_size ("struct timespec" STRUCT_TIMESPEC)
check_c_source_compiles ("int main (void) { int x = 0; if (__builtin_expect(x, 0)) return 0; else return 1; }" COMPILER_HAVE_BUILTIN_EXPECT)
check_function_exists (accept4 CheckFunctionExists.c HAVE_ACCEPT4)
check_function_exists (epoll_create CheckFunctionExists.c HAVE_EPOLL)
check_function_exists (kqueue CheckFunctionExists.c HAVE_KQUEUE)
check_function_exists (select s5args.c HAVE_SELECT)
check_function_exists (mmap s6args.c HAVE_MMAP)
check_function_exists (CreateFileMapping s6args.c HAVE_CREATEFILEMAPPING)

if (NOT HAVE_EPOLL AND NOT HAVE_SELECT)
 message (FATAL_ERROR "Events is not supported by your system.")
endif (NOT HAVE_EPOLL AND NOT HAVE_SELECT)

check_function_exists (getrlimit CheckFunctionExists.c HAVE_GETRLIMIT)
check_function_exists (fork CheckFunctionExists.c HAVE_FORK_SYSCALL)
check_function_exists (inet_ntop s4args.c HAVE_INET_NTOP)
check_function_exists (inet_pton s3args.c HAVE_INET_PTON)
check_function_exists (strtoll s3args.c HAVE_STRTOLL)
check_function_exists (_strtoi64 s3args.c HAVE_STRTOI64)
check_function_exists (strcasecmp CheckFunctionExists.c HAVE_STRCASECMP)
check_function_exists (_stricmp CheckFunctionExists.c HAVE_STRICMP)
check_function_exists (strncasecmp CheckFunctionExists.c HAVE_STRNCASECMP)
check_function_exists (_strnicmp CheckFunctionExists.c HAVE_STRNICMP)
check_function_exists (_lseeki64 CheckFunctionExists.c HAVE_LSEEKI64)

set (CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} pthread)
check_function_exists (pthread_timedjoin_np s3args.c HAVE_PTHREAD_TIMEDJOIN_NP)

required_lib (HAVE_ZLIB_H zlib.h zlib)
required_lib (HAVE_PCRE_H pcre.h PCRE)

if (NOT _LINUX)
 required_lib (HAVE_ICONV_H iconv.h iconv)
endif (NOT _LINUX)

required_lib (HAVE_LIBINTL_H libintl.h gettext)
check_include_file (malloc.h HAVE_MALLOC_H)
check_include_file (openssl/sha.h HAVE_OPENSSL_SHA1)
check_include_file (syslog.h HAVE_SYSLOG_H)
check_c_compiler_flag (-flto COMPILER_HAVE_LTO)
check_c_compiler_flag (-fuse-linker-plugin COMPILER_HAVE_USE_LINKER_PLUGIN)
check_c_compiler_flag (-Ofast COMPILER_HAVE_OFAST)
check_include_file (sys/prctl.h HAVE_PRCTL_H)
check_symbol_exists (PR_SET_NAME sys/prctl.h HAVE_PRCTL_SET_PROC_NAME)

if (ENABLE_SUPPORT_SPIDERMONKEY)
 find_path (HAVE_SPIDERMONKEY_ENGINE jsapi.h PATH_SUFFIXES spidermonkey mozjs js)
 find_library (SPIDERMONKEY_ENGINE_LIBRARY NAMES spidermonkey mozjs mozjs185 js)
endif (ENABLE_SUPPORT_SPIDERMONKEY)
